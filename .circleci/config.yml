version: 2.1

executors:
  app-executor:
    docker:
      - image: cimg/python:3.11
      # @ 13-Sep-23:
      # ubuntu 22.04.2 LTS | python3 3.11.5 | poetry 1.6.1
    working_directory: ~/app

aliases:
  - &install-dependencies
    run:
      name: Install Dependencies
      command: |
        poetry install
        echo "Successfully installed ependencies !"

  - &build-project
    run:
      name: Build Project
      command: |
        poetry install
        echo "Build Successful !""

jobs:
  requirements:
    executor: app-executor
    steps:
      - checkout
      - *install-dependencies
      - run:
          name: Requirements check
          command: |
            python -V
            poetry -V

  lint:
    executor: app-executor
    steps:
      - checkout
      - run:
          name: Ruff linting
          command: |
            python -V
            poetry -V
            poetry run ruff check --config=pyproject.toml .

    # steps:
    #   - python/install-packages:
    #       pip-dependency-file: requirements.txt
    #       pkg-manager: pip
    #   - run: *git-diff-py-files
    #   - run:
    #       name: List ruff errors
    #       command: ruff check . &> lint_checks.txt || true
    #   - run:
    #       name: ðŸ§¹ Diff-based ruff
    #       command: *display-lint-errors

  format:
    executor: app-executor
    steps:
      - checkout
      - run:
          name: Black style formatting
          command: |
            python -V
            poetry -V
            poetry run black . --check --diff --color --config=pyproject.toml

    # steps:
    #   - python/install-packages:
    #       pip-dependency-file: requirements.txt
    #       pkg-manager: pip
    #   - run: &git-diff-py-files
    #       name: List added, copied, modified, and renamed *py files
    #       command: git diff --name-only --diff-filter=ACMR origin/main | grep -E "(.py$)" > diff.txt || true
    #   - run:
    #       name: List black errors
    #       command: black . --check &> lint_checks.txt || true
    #   - run:
    #       name: ðŸ§¹ Diff-based black
    #       command: &display-lint-errors |
    #         grep -Ff diff.txt lint_checks.txt > lint_errors.txt || true
    #         if [ -s lint_errors.txt ]; then
    #           cat lint_errors.txt
    #           printf 'Run the following command to fix your branch:\n make fixes'
    #           exit 1
    #         fi

  test:
    executor: app-executor
    steps:
      - checkout
      - run:
          name: Unit testing
          command: |
            python -V
            poetry -V

  build:
    executor: app-executor
    steps:
      - checkout
      - run:
          name: Build
          command: |
            python -V
            poetry -V

workflows:
  # version: 2
  ci:
    jobs:
      - requirements

      - lint:
        # name: ruff linting
        # filters: *ci-filter
          requires:
            - requirements

      - format:
        # name: black style formatting
        # filters: *ci-filter
          requires:
            - lint

      - test:
          # name: Unit testing
          # filters: *ci-filter
          requires:
            - format

  build:
    jobs:
      - build
      - approval:
          type: approval
          requires:
            - build
