version: 2.1

orbs:
  python: circleci/python@2.1.1

# executors:
#   app-executor:
#     docker:
#       - image: cimg/python:3.11
#       # @ 13-Sep-23:
#       # ubuntu 22.04.2 LTS | python3 3.11.5 | poetry 1.6.1
#     working_directory: ~/app

# aliases:
#   - &install-dependencies
#     run:
#       name: Install dependencies
#       command: poetry install

#   - &install-dev-dependencies
#     run:
#       name: Install dev dependencies
#       command: poetry install --only dev

#   - &install-test-dependencies
#     run:
#       name: Install test dependencies
#       command: poetry install --only test

#   - &build-project
#     run:
#       name: Build Project
#       command: poetry install

jobs:
  requirements:
    executor: &python-executor
      name: python/default
      tag: "3.11"
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          command: poetry check

#   requirements:
#     executor: app-executor
#     steps:
#       - checkout
#       - python/install-packages:
#           pkg-manager: poetry
#       - run:
#           name: Requirements check
#           command: poetry check

#   lint:
#     executor: &python-executor
#       name: python/default
#       tag: "3.11"
#     steps:
#       - checkout
#       - *install-dev-dependencies
#       - run: &git-diff-py-files
#           name: List added, copied, modified, and renamed *py files
#           command: |
#             git diff --name-only --diff-filter=ACMR origin/main | grep -E "(.py$)" > diff.txt || true
#       - run:
#           name: Ruff linting
#           command: |
#             poetry run ruff check --config=pyproject.toml . &> lint_checks.txt || true
#       - run:
#           name: Diff-based ruff
#           command: &display-lint-errors |
#             grep -Ff diff.txt lint_checks.txt > lint_errors.txt || true
#             if [ -s lint_errors.txt ]; then
#               cat lint_errors.txt
#               printf 'Run the following command to fix your branch:\n make fixes'
#               exit 1
#             fi

#   format:
#     executor: *python-executor
#     steps:
#       - checkout
#       - *install-dev-dependencies
#       - run: *git-diff-py-files
#       - run:
#           name: Black style formatting
#           command: |
#             poetry run black --check --diff --color --config=pyproject.toml . &> lint_checks.txt || true
#       - run:
#           name: Diff-based black
#           command: *display-lint-errors

#   test:
#     executor: *python-executor
#     steps:
#       - checkout
#       - python/install-packages:
#           pkg-manager: poetry
#       - run:
#           name: Unit testing
#           command: |
#             python -V

#   build:
#     executor: app-executor
#     steps:
#       - checkout
#       - *install-dependencies
#       - run:
#           name: Build
#           command: |
#             python -V

workflows:
  ci:
    jobs:
      - requirements:
          name: Validate requirements
#           filters: &ci-filter
#             branches:
#               ignore: main
#             tags:
#               ignore: /.*/

#       - lint:
#           name: Ruff linting
#           filters: *ci-filter
#           requires:
#             - Validate requirements

#       - format:
#           name: Black formatting
#           filters: *ci-filter
#           requires:
#             - Validate requirements

#       - test:
#           name: Unit testing
#           filters: *ci-filter
#           requires:
#             - Ruff linting
#             - Black formatting

#   build:
#     jobs:
#       - build
#       - approval:
#           type: approval
#           requires:
#             - build
