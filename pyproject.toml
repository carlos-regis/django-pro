[tool.poetry]
name = "django-pro"
version = "0.1.0"
description = "Django for Professionals - William Vincent"
authors = ["Carlos Regis <cr@carlosregis.com>"]
readme = "README.md"
license = "MIT"

[tool.poetry.dependencies]
python = "^3.11"
psycopg2-binary = "^2.9.7"
# Django Dependencies
django = "^4.2.4"
django-environ = "^0.10.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
ruff = "^0.0.286"
pylint-django = "^2.5.3"
pre-commit = "^3.4.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "^7.2.5"
sphinx-rtd-theme = "^1.3.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest-django = "^4.5.2"
pytest = "^7.4.2"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core>=1.6.1",
]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
(
      docs
    | migrations
    | static/CACHE/
)
'''

[tool.ruff]
cache-dir = "~/.cache/ruff"
fix = false
target-version = "py311"
show-fixes = true
show-source = true
select = ["ALL"]
ignore = [
  "ANN",    # Type hints related, handled by MyPy
  "COM812", # Trailing comma missing, handled by Black
  "D211",   # No blank lines allowed before class docstring
  "D213",   # Multi-line docstring summary should start at the second line
  "E501",   # line too long, handled by Black
  "RUF100", # Unused noqa directive
]
extend-exclude = [
  "**/migrations/*",
  "**/static/CACHE/*",
  "docs",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F403"]
# "path/to/file.py" = ["E402"]
# "**/{tests,docs,tools}/*" = ["E402"]

[tool.ruff.pep8-naming]
ignore-names = [
    'foo',
    'bar',
]

# [tool.ruff.isort]
# known-third-party = ["fastapi", "pydantic", "starlette"]

[tool.bandit]
exclude_dirs = ["tests", "settings.py"]
# tests = ["B201", "B301"]
# skips = ["B101", "B601"]

[tool.djlint]
profile="django"

[tool.codespell]
write-changes = true
ignore-words-list = "asend"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "bookstore.settings"
python_files = "tests.py test_*.py *_tests.py"
addopts = "-ra -q --reuse-db --tb=short --nomigrations"
