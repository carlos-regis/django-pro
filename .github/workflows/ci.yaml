name: ci

on: [push, pull_request]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  requirements:
    # Ubunty latest @ 13-Sep-23: 
    # Ubuntu 22.04.3 LTS | Python 3.10.12 | Pipx 1.2.0 | No poetry | PostgreSQL 14.9
    runs-on: ubuntu-latest  
    steps:
      - uses: actions/checkout@v3
      - run: python -m pipx install poetry
      - name: Set up Python version from Poetry config
        uses: actions/setup-python@v4
        with:
          python-version-file: 'pyproject.toml'
          cache: 'poetry'   # caching poetry dependencies
      - name: Requirements check
        run: |
          python -V    
          poetry -V      
          poetry install          
          echo "$(poetry env info --path)/bin" >> $GITHUB_PATH
      - uses: jakebailey/pyright-action@v1

  lint:
    runs-on: ubuntu-latest
    needs: [requirements]
    steps:
      - uses: actions/checkout@v3
    #   - name: Set up Python 3.11
    #     uses: actions/setup-python@v4
    #     with:
    #       python-version: 3.11
      - name: Python & poetry version
        run: |
          python -V
          poetry -V
      - name: Ruff linting
        uses: chartboost/ruff-action@v1
        with:
          args: check --config=pyproject.toml --verbose
        # run: |
        #   python -m pip install --upgrade pip
        #   python -m pip install poetry
        #   poetry install 

  format:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Black style formatting
        uses: psf/black@stable
        with:
          options: --color --config=pyproject.toml --verbose
        # run: |
        #   python -m pip install --upgrade pip
        #   python -m pip install poetry
        #   poetry install --only dev 
        #   poetry run black .
        # env:
        #   CHANGED_FILES: ${{ steps.file_changes.outputs.added_modified }}

  test:
    runs-on: ubuntu-latest
    needs: [format]
    steps:
      - uses: actions/checkout@v3
      - name: Unit testing
        run: |
          python -V
          # poetry -V
          # poetry run pytest

  build:
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: |
          python -V
          # poetry -V
